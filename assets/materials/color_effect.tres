[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://bvh3ihx70dtn6"]

[sub_resource type="Shader" id="Shader_qqr4u"]
code = "shader_type canvas_item;
render_mode unshaded;
uniform vec4 blink_color : source_color;
uniform float blink_intensity = 0.0;
uniform vec4 albedo_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);

void fragment() {
    vec4 color = texture(TEXTURE, UV);

    // Apply albedo tint (multiplicative)
    color.rgb *= albedo_color.rgb;
    color.a *= albedo_color.a;

    // Mix with blink color, respecting alpha and intensity
    color = mix(color, blink_color, blink_intensity * color.a);

    COLOR = color;
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[resource]
resource_local_to_scene = true
shader = SubResource("Shader_qqr4u")
shader_parameter/blink_color = Color(1, 1, 1, 1)
shader_parameter/blink_intensity = 0.0
shader_parameter/albedo_color = Color(0.63, 0.63, 0.63, 1)
